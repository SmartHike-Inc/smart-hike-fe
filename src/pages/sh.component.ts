import {Component, OnInit} from '@angular/core';
import {NavigationEnd, Router} from '@angular/router';
import {NgRedux} from '@angular-redux/store';
import {IAppState} from '../system/state/interfaces/appState.interface';
import {SITE} from '../system/state/actions/actions';
import { library, dom } from '@fortawesome/fontawesome-svg-core';
import {
  faWindowClose,
  faMinusSquare,
  faWindowMaximize,
  faSave,
  faTrashAlt,
  faMeh,
  faWindowMinimize,
  faQuestionCircle,
  faEnvelope,
  faPlayCircle,
  faPaperPlane,
  faFileArchive,
  faClock,
  faFile,
  faCheckCircle,
  faTimesCircle,
  faBell,
  faChartBar
} from '@fortawesome/free-regular-svg-icons';
import {
  faCog,
  faCogs,
  faDownload,
  faBullhorn,
  faDotCircle,
  faBuilding,
  faKey,
  faEye,
  faEyeSlash,
  faPlus,
  faLaptop,
  faFileImport,
  faGlobe,
  faEraser,
  faExpandArrowsAlt,
  faArrowLeft,
  faAngleDown,
  faAngleUp,
  faSearch,
  faEllipsisH,
  faAngleDoubleLeft,
  faAngleDoubleRight,
  faHome,
  faBalanceScale,
  faFileAlt,
  faUserSecret,
  faPencilAlt,
  faLayerGroup,
  faBinoculars,
  faRedoAlt,
  faNewspaper,
  faMoneyBillAlt,
  faFileWord,
  faHeart,
  faMagnet,
  faLifeRing,
  faBatteryHalf,
  faBolt,
  faBook,
  faLightbulb,
  faCoffee,
  faUnlock,
  faLock,
  faCube,
  faLink,
  faCaretDown,
  faBars,
  faCalendarAlt,
  faCalendarPlus,
  faUser,
  faUserPlus,
  faCircle,
  faUsers,
  faSmile,
  faSignOutAlt,
  faSignInAlt,
  faCloudUploadAlt,
  faUpload,
  faCloudDownloadAlt,
  faMapMarkedAlt,
  faMapMarkerAlt,
  faListUl,
  faServer,
  faHdd,
  faAt,
  faSyncAlt,
  faTimes,
  faCartArrowDown,
  faCamera,
  faCameraRetro,
  faUserCircle,
  faTachometerAlt,
  faFolder,
  faChartArea,
  faChartPie,
  faTable,
  faComments,
  faAngleRight,
  faList,
  faShoppingCart,
  faDatabase,
  faLevelUpAlt,
  faBroadcastTower,
  faExclamation,
  faQuestion,
  faTh,
  faWrench,
  faPlusCircle,
  faCheck,
  faExternalLinkAlt,
  faFileDownload,
  faHeadset,
  faToolbox,
  faExclamationTriangle,
  faFileInvoice,
  faFileInvoiceDollar
} from '@fortawesome/free-solid-svg-icons';
import { faFacebook, faYoutube, faTwitter, faGooglePlus, faInstagram, faBuromobelexperte } from '@fortawesome/free-brands-svg-icons';

library.add(
  faFileInvoice,
  faFileInvoiceDollar,
  faDownload,
  faBuilding,
  faLevelUpAlt,
  faEye,
  faEyeSlash,
  faBell,
  faChartBar,
  faChartPie,
  faUserCircle,
  faTachometerAlt,
  faFolder,
  faChartArea,
  faTable,
  faComments,
  faAngleRight,
  faExclamation,
  faList,
  faShoppingCart,
  faDatabase,
  faKey,
  faCog,
  faCogs,
  faPlus,
  faLaptop,
  faFileImport,
  faFile,
  faFileArchive,
  faClock,
  faPaperPlane,
  faEraser,
  faCartArrowDown,
  faPlayCircle,
  faTimes,
  faTimesCircle,
  faQuestionCircle,
  faBullhorn,
  faDotCircle,
  faSearch,
  faWindowClose,
  faArrowLeft,
  faExpandArrowsAlt,
  faCloudUploadAlt,
  faUpload,
  faCloudDownloadAlt,
  faMapMarkedAlt,
  faMapMarkerAlt,
  faListUl,
  faServer,
  faHdd,
  faAt,
  faMinusSquare,
  faEllipsisH,
  faWindowMinimize,
  faWindowMaximize,
  faAngleDown,
  faAngleUp,
  faSave,
  faCircle,
  faTrashAlt,
  faMeh,
  faAngleDoubleLeft,
  faAngleDoubleRight,
  faCaretDown,
  faBars,
  faCalendarAlt,
  faCalendarPlus,
  faUser,
  faUserPlus,
  faUsers,
  faSmile,
  faSignOutAlt,
  faSignInAlt,
  faUnlock,
  faLock,
  faCube,
  faLink,
  faHome,
  faBalanceScale,
  faFileAlt,
  faUserSecret,
  faPencilAlt,
  faLayerGroup,
  faBroadcastTower,
  faBinoculars,
  faQuestion,
  faTh,
  faBuromobelexperte,
  faEnvelope,
  faRedoAlt,
  faNewspaper,
  faMoneyBillAlt,
  faFileWord,
  faMagnet,
  faLifeRing,
  faBatteryHalf,
  faBolt,
  faBook,
  faLightbulb,
  faFacebook,
  faYoutube,
  faTwitter,
  faGooglePlus,
  faInstagram,
  faHeart,
  faCoffee,
  faSyncAlt,
  faCamera,
  faCameraRetro,
  faGlobe,
  faWrench,
  faPlusCircle,
  faCheck,
  faCheckCircle,
  faExternalLinkAlt,
  faFileDownload,
  faHeadset,
  faToolbox,
  faExclamationTriangle
);

dom.watch();


@Component({
  selector: 'sh-root',
  templateUrl: './sh.html'
})
export class ShComponent implements OnInit {

  constructor(private router: Router, private ngRedux: NgRedux<IAppState>) {
  }

  ngOnInit() {
    this.setRoute();
  }

  setRoute() {
    this.router.events.subscribe((data) => {
      if (data instanceof NavigationEnd) {
        this.ngRedux.dispatch({
          type: SITE.CHANGE_ROUTE,
          route: data.urlAfterRedirects
        });
      }
    });
  }
}
